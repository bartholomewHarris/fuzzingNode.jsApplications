{"version":3,"sources":["modules/common/common.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","nguniversal","common","tslib","ng","http","core","platformBrowser","rxjs","operators","this","getHeadersMap","headers","e_1","_a","headersMap","_b","__values","keys","_c","next","done","key","value","getAll","e_1_1","error","return","call","TransferHttpCacheInterceptor","appRef","transferState","_this","isCacheActive","isStable","pipe","filter","take","toPromise","then","prototype","invalidateCacheEntry","url","Object","forEach","includes","remove","makeStateKey","makeCacheKey","method","params","encodedParams","sort","map","k","get","join","intercept","req","handle","storeKey","hasKey","response","of","HttpResponse","body","HttpHeaders","status","statusText","tap","event","set","decorators","type","Injectable","ctorParameters","ApplicationRef","TransferState","TransferHttpCacheModule","NgModule","args","imports","BrowserTransferStateModule","providers","provide","HTTP_INTERCEPTORS","useExisting","multi","domContentLoadedFactory","doc","Promise","resolve","_reject","contentLoaded","removeEventListener","readyState","addEventListener","StateTransferInitializerModule","APP_INITIALIZER","useFactory","deps","DOCUMENT","ɵTransferHttpCacheInterceptor","ɵnguniversal_modules_common_common_a","defineProperty"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('@angular/common/http'), require('@angular/core'), require('@angular/platform-browser'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :\n    typeof define === 'function' && define.amd ? define('@nguniversal/common', ['exports', 'tslib', '@angular/common/http', '@angular/core', '@angular/platform-browser', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :\n    (global = global || self, factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = {}), global.tslib, global.ng.common.http, global.ng.core, global.ng.platformBrowser, global.rxjs, global.rxjs.operators, global.ng.common));\n}(this, (function (exports, tslib, http, core, platformBrowser, rxjs, operators, common) { 'use strict';\n\n    function getHeadersMap(headers) {\n        var e_1, _a;\n        var headersMap = {};\n        try {\n            for (var _b = tslib.__values(headers.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                headersMap[key] = headers.getAll(key);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return headersMap;\n    }\n    var TransferHttpCacheInterceptor = /** @class */ (function () {\n        function TransferHttpCacheInterceptor(appRef, transferState) {\n            var _this = this;\n            this.transferState = transferState;\n            this.isCacheActive = true;\n            // Stop using the cache if the application has stabilized, indicating initial rendering is\n            // complete.\n            // tslint:disable-next-line: no-floating-promises\n            appRef.isStable\n                .pipe(operators.filter(function (isStable) { return isStable; }), operators.take(1)).toPromise()\n                .then(function () { _this.isCacheActive = false; });\n        }\n        TransferHttpCacheInterceptor.prototype.invalidateCacheEntry = function (url) {\n            var _this = this;\n            Object.keys(this.transferState['store'])\n                .forEach(function (key) { return key.includes(url) ? _this.transferState.remove(platformBrowser.makeStateKey(key)) : null; });\n        };\n        TransferHttpCacheInterceptor.prototype.makeCacheKey = function (method, url, params) {\n            // make the params encoded same as a url so it's easy to identify\n            var encodedParams = params.keys().sort().map(function (k) { return k + \"=\" + params.get(k); }).join('&');\n            var key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n            return platformBrowser.makeStateKey(key);\n        };\n        TransferHttpCacheInterceptor.prototype.intercept = function (req, next) {\n            var _this = this;\n            // Stop using the cache if there is a mutating call.\n            if (req.method !== 'GET' && req.method !== 'HEAD') {\n                this.isCacheActive = false;\n                this.invalidateCacheEntry(req.url);\n            }\n            if (!this.isCacheActive) {\n                // Cache is no longer active. Pass the request through.\n                return next.handle(req);\n            }\n            var storeKey = this.makeCacheKey(req.method, req.url, req.params);\n            if (this.transferState.hasKey(storeKey)) {\n                // Request found in cache. Respond using it.\n                var response = this.transferState.get(storeKey, {});\n                return rxjs.of(new http.HttpResponse({\n                    body: response.body,\n                    headers: new http.HttpHeaders(response.headers),\n                    status: response.status,\n                    statusText: response.statusText,\n                    url: response.url,\n                }));\n            }\n            else {\n                // Request not found in cache. Make the request and cache it.\n                var httpEvent = next.handle(req);\n                return httpEvent\n                    .pipe(operators.tap(function (event) {\n                    if (event instanceof http.HttpResponse) {\n                        _this.transferState.set(storeKey, {\n                            body: event.body,\n                            headers: getHeadersMap(event.headers),\n                            status: event.status,\n                            statusText: event.statusText,\n                            url: event.url || '',\n                        });\n                    }\n                }));\n            }\n        };\n        TransferHttpCacheInterceptor.decorators = [\n            { type: core.Injectable }\n        ];\n        TransferHttpCacheInterceptor.ctorParameters = function () { return [\n            { type: core.ApplicationRef },\n            { type: platformBrowser.TransferState }\n        ]; };\n        return TransferHttpCacheInterceptor;\n    }());\n    /**\n     * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n     * calls from the server to the client application.\n     */\n    var TransferHttpCacheModule = /** @class */ (function () {\n        function TransferHttpCacheModule() {\n        }\n        TransferHttpCacheModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [platformBrowser.BrowserTransferStateModule],\n                        providers: [\n                            TransferHttpCacheInterceptor,\n                            { provide: http.HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true },\n                        ],\n                    },] }\n        ];\n        return TransferHttpCacheModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function domContentLoadedFactory(doc) {\n        return function () { return new Promise(function (resolve, _reject) {\n            var contentLoaded = function () {\n                doc.removeEventListener('DOMContentLoaded', contentLoaded);\n                resolve();\n            };\n            if (doc.readyState === 'complete' || doc.readyState === 'interactive') {\n                resolve();\n            }\n            else {\n                doc.addEventListener('DOMContentLoaded', contentLoaded);\n            }\n        }); };\n    }\n    var StateTransferInitializerModule = /** @class */ (function () {\n        function StateTransferInitializerModule() {\n        }\n        StateTransferInitializerModule.decorators = [\n            { type: core.NgModule, args: [{\n                        providers: [\n                            { provide: core.APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [common.DOCUMENT] },\n                        ]\n                    },] }\n        ];\n        return StateTransferInitializerModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.StateTransferInitializerModule = StateTransferInitializerModule;\n    exports.TransferHttpCacheModule = TransferHttpCacheModule;\n    exports.ɵTransferHttpCacheInterceptor = TransferHttpCacheInterceptor;\n    exports.ɵnguniversal_modules_common_common_a = domContentLoadedFactory;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=common.umd.js.map\n"]}