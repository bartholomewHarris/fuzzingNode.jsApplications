{"version":3,"file":"common.umd.js","sources":["../../../../../modules/common/src/transfer_http.ts","../../../../../modules/common/src/state-transfer-initializer/module.ts","../../../../../modules/common/private_api.ts","../../../../../modules/common/public_api.ts","../../../../../modules/common/index.ts","../../../../../modules/common/common.ts"],"names":["__values","filter","take","makeStateKey","observableOf","HttpResponse","HttpHeaders","tap","Injectable","ApplicationRef","TransferState","NgModule","BrowserTransferStateModule","HTTP_INTERCEPTORS","APP_INITIALIZER","DOCUMENT"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  HTTP_INTERCEPTORS,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpParams,\n  HttpRequest,\n  HttpResponse\n} from '@angular/common/http';\nimport { ApplicationRef, Injectable, NgModule } from '@angular/core';\nimport {\n  BrowserTransferStateModule,\n  StateKey,\n  TransferState,\n  makeStateKey\n} from '@angular/platform-browser';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { filter, take, tap } from 'rxjs/operators';\n\nexport interface TransferHttpResponse {\n  body?: any | null;\n  headers?: {[k: string]: string[]};\n  status?: number;\n  statusText?: string;\n  url?: string;\n}\n\nfunction getHeadersMap(headers: HttpHeaders) {\n  const headersMap: Record<string, string[] | null> = {};\n  for (const key of headers.keys()) {\n    headersMap[key] = headers.getAll(key);\n  }\n\n  return headersMap;\n}\n\n@Injectable()\nexport class TransferHttpCacheInterceptor implements HttpInterceptor {\n\n  private isCacheActive = true;\n\n  private invalidateCacheEntry(url: string) {\n    Object.keys(this.transferState['store'])\n      .forEach(key => key.includes(url) ? this.transferState.remove(makeStateKey(key)) : null);\n  }\n\n  private makeCacheKey(method: string, url: string, params: HttpParams): StateKey<string> {\n    // make the params encoded same as a url so it's easy to identify\n    const encodedParams = params.keys().sort().map(k => `${k}=${params.get(k)}`).join('&');\n    const key = (method === 'GET' ? 'G.' : 'H.') + url + '?' + encodedParams;\n\n    return makeStateKey<TransferHttpResponse>(key);\n  }\n\n  constructor(appRef: ApplicationRef, private transferState: TransferState) {\n    // Stop using the cache if the application has stabilized, indicating initial rendering is\n    // complete.\n    // tslint:disable-next-line: no-floating-promises\n    appRef.isStable\n      .pipe(\n        filter((isStable: boolean) => isStable),\n        take(1)\n      ).toPromise()\n      .then(() => { this.isCacheActive = false; });\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Stop using the cache if there is a mutating call.\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      this.isCacheActive = false;\n      this.invalidateCacheEntry(req.url);\n    }\n\n    if (!this.isCacheActive) {\n      // Cache is no longer active. Pass the request through.\n      return next.handle(req);\n    }\n\n    const storeKey = this.makeCacheKey(req.method, req.url, req.params);\n\n    if (this.transferState.hasKey(storeKey)) {\n      // Request found in cache. Respond using it.\n      const response = this.transferState.get(storeKey, {} as TransferHttpResponse);\n\n      return observableOf(new HttpResponse<any>({\n        body: response.body,\n        headers: new HttpHeaders(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url,\n      }));\n    } else {\n      // Request not found in cache. Make the request and cache it.\n      const httpEvent = next.handle(req);\n\n      return httpEvent\n        .pipe(\n          tap((event: HttpEvent<unknown>) => {\n            if (event instanceof HttpResponse) {\n              this.transferState.set(storeKey, {\n                body: event.body,\n                headers: getHeadersMap(event.headers),\n                status: event.status,\n                statusText: event.statusText,\n                url: event.url || '',\n              });\n            }\n          })\n        );\n    }\n  }\n}\n\n/**\n * An NgModule used in conjunction with `ServerTransferHttpCacheModule` to transfer cached HTTP\n * calls from the server to the client application.\n */\n@NgModule({\n  imports: [BrowserTransferStateModule],\n  providers: [\n    TransferHttpCacheInterceptor,\n    {provide: HTTP_INTERCEPTORS, useExisting: TransferHttpCacheInterceptor, multi: true},\n  ],\n})\nexport class TransferHttpCacheModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\n\nexport function domContentLoadedFactory(doc: Document) {\n  return () => new Promise ((resolve, _reject) => {\n    const contentLoaded = () => {\n      doc.removeEventListener('DOMContentLoaded', contentLoaded);\n      resolve();\n    };\n    if (doc.readyState === 'complete' || doc.readyState === 'interactive') {\n      resolve();\n    } else {\n      doc.addEventListener('DOMContentLoaded', contentLoaded);\n    }\n  });\n}\n\n\n@NgModule({\n  providers: [\n    {provide: APP_INITIALIZER, multi: true, useFactory: domContentLoadedFactory, deps: [DOCUMENT]},\n  ]\n})\nexport class StateTransferInitializerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { TransferHttpCacheInterceptor as ɵTransferHttpCacheInterceptor } from './src/transfer_http';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { TransferHttpCacheModule } from './src/transfer_http';\nexport { StateTransferInitializerModule } from './src/state-transfer-initializer/module';\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {domContentLoadedFactory as ɵnguniversal_modules_common_common_a} from './src/state-transfer-initializer/module';"]}