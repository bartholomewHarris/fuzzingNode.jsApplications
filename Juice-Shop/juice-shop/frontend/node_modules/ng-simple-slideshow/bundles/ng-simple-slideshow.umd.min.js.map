{"version":3,"file":"ng-simple-slideshow.umd.min.js","sources":["~/ng-simple-slideshow/src/app/modules/slideshow/pointer.service.ts","~/ng-simple-slideshow/src/app/modules/slideshow/slideshow.component.ts","~/ng-simple-slideshow/src/app/modules/slideshow/slideshow.module.ts"],"sourcesContent":["import { Injectable, ElementRef, EventEmitter, Renderer2, Inject, PLATFORM_ID, RendererFactory2 } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nclass State {\n  // a tag width\n  aw: number = 0;\n  // a tag height\n  ah: number = 0;\n  // actual image width\n  w: number = 0;\n  // actual image height\n  h: number = 0;\n  // aspect ratio of image\n  get ar(): number {\n    return this.w / this.h;\n  }\n  // diagonal of image\n  get diag(): number {\n    return Math.sqrt((this.w * this.w) + (this.h * this.h));\n  }\n  // is state populated and valid\n  get valid(): boolean {\n    return this.w > 0 && this.h > 0 && this.aw > 0 && this.ah > 0;\n  }\n  // is image actual size bounded by width against the a tag view port, horizontal clip in case of cover\n  get widthBound(): boolean {\n    return this.ar > (this.aw / this.ah);\n  }\n}\n\n@Injectable()\nexport class PointerService {\n  // private _renderer: Renderer2;\n\n  //options\n  private _disableSwiping = false;\n  private _enableZoom = false;\n  private _enablePan = false;\n\n  // adapted from https://github.com/mdn/dom-examples/blob/master/pointerevents/Pinch_zoom_gestures.html\n  private _startEVCache: PointerEvent = null;\n  private _evCache: Array<PointerEvent> = new Array();\n  private _previousDiagonal: number = -1;\n  private _originalState: State = new State();\n  private _slideEvent: EventEmitter<number> = new EventEmitter<number>(true);\n  // custom click event is a workaround for the fact that click+move will fire a click event after move\n  private _clickEvent: EventEmitter<void> = new EventEmitter<void>(true);\n\n  private pointerUp = (event: PointerEvent) => {\n    this._pointerUp(event);\n  }\n\n  private pointerDown = (event: PointerEvent) => {\n    this._pointerDown(event);\n  }\n\n  private pointerMove = (event: PointerEvent) => {\n    this._pointerMove(event);\n  }\n\n  public set disableSwiping(state: boolean) {\n    this._disableSwiping = state;\n  }\n\n  public set enableZoom(state: boolean) {\n    this._enableZoom = state;\n  }\n\n  public set enablePan(state: boolean) {\n    this._enablePan = state;\n  }\n\n  bind(el: ElementRef) {\n    if (isPlatformBrowser(this.platform_id)) {\n      el.nativeElement.addEventListener('pointerdown', this.pointerDown);\n      el.nativeElement.addEventListener('pointerup', this.pointerUp);\n      el.nativeElement.addEventListener('pointercancel', this.pointerUp);\n      el.nativeElement.addEventListener('pointerout', this.pointerUp);\n      el.nativeElement.addEventListener('pointerleave', this.pointerUp);\n      el.nativeElement.addEventListener('pointermove', this.pointerMove);\n    }\n  }\n\n  unbind(el: ElementRef) {\n    if (isPlatformBrowser(this.platform_id)) {\n      el.nativeElement.removeEventListener('pointerdown', this.pointerDown);\n      el.nativeElement.removeEventListener('pointerup', this.pointerUp);\n      el.nativeElement.removeEventListener('pointercancel', this.pointerUp);\n      el.nativeElement.removeEventListener('pointerout', this.pointerUp);\n      el.nativeElement.removeEventListener('pointerleave', this.pointerUp);\n      el.nativeElement.removeEventListener('pointermove', this.pointerMove);\n    }\n  }\n\n  public get slideEvent(): EventEmitter<Number> {\n    return this._slideEvent;\n  }\n\n  public get clickEvent(): EventEmitter<void> {\n    return this._clickEvent;\n  }\n\n  constructor(\n    // rendererFactory: RendererFactory2,\n    @Inject(PLATFORM_ID) private platform_id: any\n  ) {\n    // this._renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  private _pointerDown(e: PointerEvent) {\n    this._evCache.push(e);\n    if (this._evCache.length === 1) {\n      this._startEVCache = e;\n      if (this._enablePan || this._enableZoom) {\n        // Cache the image sizes and container sizes\n        this._loadOriginalState(e);\n        // Convert backgroundSize to pixels\n        this._convertBGSizeToPixels(e);\n        // Convert backgroundPosition to pixels\n        this._convertBGPosToPixels(e);\n      }\n    }\n  }\n\n  // Saving original state, calculation is done only once during during 1st pointerdown\n  private _loadOriginalState(e: PointerEvent): void {\n    if (!this._originalState.valid && e.target && (e.target as any).style && (e.target as any).style.backgroundImage) {\n      const imgUrlArr = (e.target as any).style.backgroundImage.match(/^url\\([\"']?(.+?)[\"']?\\)$/);\n      const img = new Image();\n      img.src = imgUrlArr[1];\n      this._originalState.aw = (e.target as any).offsetWidth;\n      this._originalState.ah = (e.target as any).offsetHeight;\n      this._originalState.w = img.width;\n      this._originalState.h = img.height;\n    }\n  }\n\n  // Convert BG size literals and percentage to pixels in x axis and preserve image aspect ratio\n  private _convertBGSizeToPixels(e: PointerEvent): void {\n    const imgElement = (e.target as any);\n    let bgSize = imgElement.style.backgroundSize;\n    if (bgSize.indexOf(' ') > -1) {\n      // backgroundSize pattern \"auto 100px\" or \"100px auto\" or \"100px 200px\"\n      const sizeTuple = bgSize.split(' ');\n      bgSize = this._originalState.widthBound ? sizeTuple[0] : sizeTuple[1];\n    }\n    if (bgSize === 'cover') {\n      bgSize = this._originalState.widthBound ? this._originalState.ah * this._originalState.ar : this._originalState.aw;\n    }\n    else if (bgSize.indexOf('px') > -1) {\n      bgSize = bgSize.substring(0, bgSize.length - 2);\n    }\n    else if (bgSize.indexOf('%') > -1) { // Untested\n      const bgSizePercentage = Number(bgSize.substring(0, bgSize.length - 1)) / 100;\n      bgSize = this._originalState.widthBound ? this._originalState.aw * bgSizePercentage : this._originalState.ah * bgSizePercentage * this._originalState.ar;\n    }\n    else if (bgSize === 'auto') {\n      bgSize = this._originalState.w;\n    }\n    else if (bgSize === 'contain') {\n      bgSize = this._originalState.widthBound ? this._originalState.aw : this._originalState.ah * this._originalState.ar;\n    }\n    else {\n      // backgroundSize pattern \"could not identify\" // will be treated as contain\n      bgSize = this._originalState.widthBound ? this._originalState.aw : this._originalState.ah * this._originalState.ar;\n    }\n    imgElement.style.backgroundSize = bgSize + 'px auto';\n  }\n\n  // Convert BG position literals and percentage to pixels\n  private _convertBGPosToPixels(e: PointerEvent): void {\n    if (this._originalState.valid) {\n      const imgElement = (e.target as any);\n      const bgSize = this._currentBGSize(e);\n      let bgPosX = imgElement.style.backgroundPositionX;\n      if (bgPosX.indexOf('px') === -1) {\n        bgPosX = this._convertLiteralPosToPercentage(bgPosX);\n        if (bgPosX.indexOf('%') > -1) {\n          let bgPosXPercentage = Number(bgPosX.substring(0, bgPosX.length - 1)) / 100;\n          bgPosX = bgPosXPercentage * (this._originalState.aw - bgSize);\n        }\n        imgElement.style.backgroundPositionX = bgPosX + 'px';\n      }\n      let bgPosY = imgElement.style.backgroundPositionY;\n      if (bgPosY.indexOf('px') === -1) {\n        bgPosY = this._convertLiteralPosToPercentage(bgPosY);\n        if (bgPosY.indexOf('%') > -1) {\n          let bgPosYPercentage = Number(bgPosY.substring(0, bgPosY.length - 1)) / 100;\n          bgPosY = bgPosYPercentage * (this._originalState.ah - (bgSize / this._originalState.ar));\n        }\n        imgElement.style.backgroundPositionY = bgPosY + 'px';\n      }\n    }\n  }\n\n  private _pointerUp(e: PointerEvent) {\n    // Remove this event from the target's cache\n    for (let i = 0; i < this._evCache.length; i++) {\n      if (this._evCache[i].pointerId === e.pointerId) {\n        this._evCache.splice(i, 1);\n        break;\n      }\n    }\n    // Purge diagonal if 2 pointers are not present\n    if (this._evCache.length !== 2) {\n      this._previousDiagonal = -1;\n    }\n    // Purge start event and original state if no pointers are present\n    if (this._evCache.length === 0 && this._startEVCache !== null) {\n      this._checkClickOrSwipe(e);\n      this._startEVCache = null;\n      this._originalState = new State();\n    }\n  }\n\n  /**\n   * 0th Check\n   * target is a slide\n   *\n   * 1st Check for click\n   * or x movement is less than 15 px and y movement is less than 15 px\n   *\n   * 2nd if not click, check for swipe\n   * duration < 1000 ms\n   * and x movement is >= 30 px\n   * and y movement is <= 100 px\n   */\n  private _checkClickOrSwipe(e: PointerEvent): void {\n    if (!this._targetIsASlide(e)) {\n      return;\n    }\n    const duration = e.timeStamp - this._startEVCache.timeStamp;\n    const dirX = e.pageX - this._startEVCache.pageX;\n    const dirY = e.pageY - this._startEVCache.pageY;\n    if (!this._enablePan // Skip click event when panning is enabled\n      && Math.abs(dirX) < 15 // Very less x movement\n      && Math.abs(dirY) < 15 // Very less y movement\n    ) {\n      // Click\n      this._clickEvent.emit();\n    }\n    else if (duration < 1000 // Short enough\n      && Math.abs(dirY) <= 100 // Horizontal enough\n      && Math.abs(dirX) >= 30 // Long enough\n      && !this._disableSwiping // swipe enabled\n      && this._cannotPanMoreTest(e, dirX) // cannot pan in swipe direction\n    ) {\n      // swipe\n      this._slideEvent.emit(dirX < 0 ? 1 : -1);\n    }\n  }\n\n  // Deem the target is a slide if it contains the slides class\n  private _targetIsASlide(e: PointerEvent): boolean {\n    return (e.target as any).classList.contains('slides');\n  }\n\n  // Check if image can pan more in the swipe direction. Return false if it can.\n  private _cannotPanMoreTest(e: PointerEvent, dirX: number): boolean {\n    if (!this._enablePan) { // Pan not enabled\n      return true;\n    }\n    const xPos = this._currentBGPosX(e);\n    const bgSize = this._currentBGSize(e);\n    if (dirX < 0 && bgSize > this._originalState.aw && Math.round(this._originalState.aw - bgSize - xPos) < 0) {\n      // image can be panned to the right\n      return false;\n    }\n    else if (dirX > 0 && bgSize > this._originalState.aw && xPos < 0) {\n      // image can be panned to the left\n      return false;\n    }\n    return true;\n  }\n\n  private _pointerMove(e: PointerEvent) {\n    // Prevent defaulted to start drag event after mouse click, else cancel event gets fired\n    e.preventDefault();\n\n    // If one pointer is down, goto 1 point action\n    if (this._evCache.length === 1 && this._enablePan) {\n      this._1pointMoveAction(e);\n    }\n    // Find this event in the cache and update its record with this event\n    for (let i = 0; i < this._evCache.length; i++) {\n      if (e.pointerId === this._evCache[i].pointerId) {\n        this._evCache[i] = e;\n        break;\n      }\n    }\n    // If two pointers are down, goto 2 point action\n    if (this._evCache.length === 2 && this._enableZoom) {\n      this._2pointMoveAction(e);\n    }\n  }\n\n  private _1pointMoveAction(e: PointerEvent): void {\n    if (this._evCache[0].pointerId === e.pointerId) {\n      const dx = this._evCache[0].pageX - e.pageX;\n      const dy = this._evCache[0].pageY - e.pageY;\n      if (this._originalState.valid && (dx !== 0 || dy !== 0)) {\n        this._transformBGPosition(e, dx, dy);\n      }\n    }\n  }\n\n  private _2pointMoveAction(e: PointerEvent): void {\n    // check for pinch gestures\n    // Calculate the distance between the two pointers\n    const x = Math.abs(this._evCache[0].pageX - this._evCache[1].pageX);\n    const y = Math.abs(this._evCache[0].pageY - this._evCache[1].pageY);\n    let currentDiagonal = Math.sqrt((x * x) + (y * y));\n\n    // Start 2 point action after previous diagonal and orginal state is valid\n    if (this._previousDiagonal > 0 && this._originalState.valid) {\n      const deltaX = currentDiagonal - this._previousDiagonal;\n      this._transformBGSize(e, deltaX);\n    }\n    this._previousDiagonal = currentDiagonal;\n  }\n\n  // commented and not used, actual deltaX is too small for proper user experience\n  // calculate movement in x axis after 2 point movement, assume isosceles right triangle\n  // private _deltaX(prevDiag: number, currDiag: number): number {\n  //   return (currDiag - prevDiag) / Math.sqrt(2);\n  // }\n\n  // Transform the image background position\n  private _transformBGPosition(e: PointerEvent, dx: number, dy: number): void {\n    const imgElement = (e.target as any);\n    const previousPosX = this._currentBGPosX(e);\n    const previousPosY = this._currentBGPosY(e);\n    const newPosX = this._newBGPosXConstraint(previousPosX - dx, e);\n    const newPosY = this._newBGPosYConstraint(previousPosY - dy, e);\n    if (newPosX !== previousPosX || newPosY !== previousPosY) {\n      this._setBGPos(imgElement, newPosX, newPosY);\n    }\n  }\n\n  // Set new background position\n  private _setBGPos(element: any, x: number, y: number): void {\n    element.style.backgroundPositionX = x + 'px';\n    element.style.backgroundPositionY = y + 'px';\n  }\n\n  // Check for current background position x\n  private _currentBGPosX(e: PointerEvent): number {\n    let bgPosX = (e.target as any).style.backgroundPositionX;\n    if (bgPosX.indexOf('px') > -1) {\n      bgPosX = bgPosX.substring(0, bgPosX.length - 2);\n    }\n    return Number(bgPosX);\n  }\n\n  // Check for current background position y\n  private _currentBGPosY(e: PointerEvent): number {\n    let bgPosY = (e.target as any).style.backgroundPositionY;\n    if (bgPosY.indexOf('px') > -1) {\n      bgPosY = bgPosY.substring(0, bgPosY.length - 2);\n    }\n    return Number(bgPosY);\n  }\n\n  private _convertLiteralPosToPercentage(literal: string): string {\n    if (literal === 'center') {\n      return '50%';\n    }\n    else if (literal === 'top' || literal === 'left') {\n      return '0%';\n    }\n    else if (literal === 'bottom' || literal === 'right') {\n      return '100%';\n    }\n  }\n\n  // Transform the image background size by deltaX\n  private _transformBGSize(e: PointerEvent, deltaX: number): void {\n    const imgElement = (e.target as any);\n    const currentSize = this._currentBGSize(e);\n    const newSize = this._newBGSizeConstraint(currentSize + deltaX);\n    if (newSize !== currentSize) {\n      this._setBGSize(imgElement, newSize);\n    }\n  }\n\n  private _setBGSize(element: any, size: number): void {\n    element.style.backgroundSize = size + 'px auto';\n    // stop all browser touch action after zooming slide\n    element.style.touchAction = 'none';\n  }\n\n  // Check for current background size\n  private _currentBGSize(e: PointerEvent): number {\n    const bgSize = (e.target as any).style.backgroundSize;\n    if (bgSize.indexOf(' ') > -1) {\n      // backgroundSize pattern \"auto 100px\" or \"100px auto\" or \"100px 200px\"\n      const sizeTuple = bgSize.split(' ');\n      const size = this._originalState.widthBound ? sizeTuple[0].substring(0, sizeTuple[0].length - 2) : sizeTuple[1].substring(0, sizeTuple[1].length - 2);\n      return Number(size);\n    }\n    else if (bgSize.indexOf('px') > -1) {\n      // backgroundSize pattern \"100px\"\n      const size = bgSize.substring(0, bgSize.length - 2);\n      return Number(size);\n    }\n  }\n\n  // If image size is below \"contain\", set to \"contain\"\n  private _newBGSizeConstraint(newSize: number): number {\n    if (this._originalState.widthBound) {\n      return newSize < this._originalState.aw ? this._originalState.aw : newSize;\n    } else {\n      return newSize / this._originalState.ar < this._originalState.ah ? this._originalState.ah * this._originalState.ar : newSize;\n    }\n  }\n\n  private _newBGPosXConstraint(newX: number, e: PointerEvent): number {\n    const bgSize = this._currentBGSize(e);\n    if (bgSize >= this._originalState.aw) {\n      // when image width is greater than container width\n      if (newX > 0) {\n        return 0;\n      }\n      else if (newX < this._originalState.aw - bgSize) {\n        return this._originalState.aw - bgSize;\n      }\n    }\n    else {\n      if (newX < 0) {\n        return 0;\n      }\n      else if (newX > this._originalState.aw - bgSize) {\n        return this._originalState.aw - bgSize;\n      }\n    }\n    return newX;\n  }\n\n  private _newBGPosYConstraint(newY: number, e: PointerEvent): number {\n    const bgSize = this._currentBGSize(e);\n    if (bgSize / this._originalState.ar >= this._originalState.ah) {\n      // when image height is greater than container height\n      if (newY > 0) {\n        return 0;\n      }\n      else if (newY < this._originalState.ah - (bgSize / this._originalState.ar)) {\n        return this._originalState.ah - (bgSize / this._originalState.ar);\n      }\n    }\n    else {\n      if (newY < 0) {\n        return 0;\n      }\n      else if (newY > this._originalState.ah - (bgSize / this._originalState.ar)) {\n        return this._originalState.ah - (bgSize / this._originalState.ar);\n      }\n    }\n    return newY;\n  }\n}\n","import { Component, ElementRef, EventEmitter, Inject, Input, Output, PLATFORM_ID, Renderer2, ViewChild, DoCheck, NgZone, OnInit, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, OnChanges, SimpleChanges, AfterViewInit } from '@angular/core';\n// import { SwipeService } from './swipe.service';\nimport { isPlatformServer, DOCUMENT } from '@angular/common';\nimport { ISlide } from './ISlide';\nimport { IImage } from './IImage';\nimport { DomSanitizer, TransferState, makeStateKey, SafeStyle } from '@angular/platform-browser';\nimport { PointerService } from './pointer.service';\nimport { Subscription } from 'rxjs';\n\nconst FIRST_SLIDE_KEY = makeStateKey<any>('firstSlide');\n\n@Component({\n  selector: 'slideshow',\n  template: `\n    <!-- fullscreen bar -->\n    <div [class.display-none]=\"!fullscreen\"\n         class=\"fs-container\"\n         (click)=\"exitFullScreen($event)\">\n      <i title=\"Back\"\n         class=\"arrow-exitfs prev\"></i>\n    </div>\n    <div #container\n         class=\"slideshow-container\"\n         [class.slideshow-container-fs]=\"fullscreen\">\n      <!-- slides -->\n      <a *ngFor=\"let slide of slides; index as i; trackBy: trackByFn\"\n         class=\"slides\"\n         href=\"#!\"\n         tabindex=\"-1\"\n         title=\"{{slide?.image?.title}}\"\n         [ngStyle]=\"getSlideStyle(i)\"\n         (click)=\"handleClick($event)\"\n         [class.selected]=\"slide?.selected\"\n         [class.hide-slide]=\"!slide?.selected && !slide?.leftSide && !slide?.rightSide\"\n         [class.left-side]=\"slide?.leftSide\"\n         [class.right-side]=\"slide?.rightSide\"\n         [class.slide-in-left]=\"slide?.action === 'slideInLeft'\"\n         [class.slide-in-right]=\"slide?.action === 'slideInRight'\"\n         [class.slide-out-left]=\"slide?.action === 'slideOutLeft'\"\n         [class.slide-out-right]=\"slide?.action === 'slideOutRight'\"\n         [class.link]=\"slide?.image?.clickAction || slide?.image?.href\">\n        <div class=\"loader\"\n             *ngIf=\"!slide?.loaded\"></div>\n        <div *ngIf=\"showCaptions && slide?.image?.caption\"\n             class=\"caption\"\n             [ngStyle]=\"{\n               'color': captionColor,\n               'background-color': captionBackground\n              }\"\n             [innerHTML]=\"slide?.image?.caption\">\n        </div>\n      </a>\n      <!-- left arrow -->\n      <div [class.display-none]=\"!showArrows || hideLeftArrow\"\n           (click)=\"onSlide(-1)\"\n           class=\"arrow-container prev\">\n        <i #prevArrow\n           title=\"Previous\"\n           class=\"arrow prev\"></i>\n      </div>\n      <!-- right arrow -->\n      <div [class.display-none]=\"!showArrows || hideRightArrow\"\n           (click)=\"onSlide(1)\"\n           class=\"arrow-container next\">\n        <i #nextArrow\n           title=\"Next\"\n           class=\"arrow next\"></i>\n      </div>\n      <!-- dots -->\n      <ul class=\"slick-dots\"\n          *ngIf=\"showDots\">\n        <li *ngFor=\"let slide of slides; index as i; trackBy: trackByFn\"\n            (click)=\"goToSlide(i)\"\n            [class.slick-active]=\"slide.selected\">\n          <button type=\"button\"\n                  [attr.style]=\"safeStyleDotColor\">\n            {{i}}\n          </button>\n        </li>\n      </ul>\n    </div>\n  `,\n  styles: [`\n    /*\n     styles adapted from https://www.w3schools.com/w3css/4/w3.css\n     arrow styles adapted from https://codepen.io/minustalent/pen/Frhaw\n     */\n    .display-none {\n      display: none !important; }\n\n    .fs-container {\n      display: block;\n      cursor: pointer;\n      position: fixed;\n      z-index: 1;\n      top: 16px;\n      left: 16px;\n      width: 46px;\n      height: 46px;\n      text-align: center;\n      padding: 0;\n      background-color: rgba(0, 0, 0, 0.2);\n      -webkit-transition: all .2s ease-in-out;\n      transition: all .2s ease-in-out; }\n      .fs-container:hover {\n        background-color: rgba(0, 0, 0, 0.33); }\n      .fs-container .arrow-exitfs {\n        display: block;\n        width: 30px;\n        height: 30px;\n        background: transparent;\n        border-top: 2px solid #f2f2f2;\n        -webkit-transition: all .2s ease-in-out;\n        transition: all .2s ease-in-out; }\n        .fs-container .arrow-exitfs.prev {\n          -webkit-transform: rotate(-45deg);\n                  transform: rotate(-45deg);\n          position: relative;\n          left: 18px;\n          top: 18px; }\n        .fs-container .arrow-exitfs:after {\n          content: '';\n          width: 30px;\n          height: 30px;\n          background: transparent;\n          border-top: 2px solid #f2f2f2;\n          -webkit-transform: rotate(90deg);\n                  transform: rotate(90deg);\n          position: absolute;\n          left: -15px;\n          top: -17px; }\n\n    .slideshow-container.slideshow-container-fs {\n      position: fixed;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%; }\n\n    .slideshow-container {\n      position: relative;\n      display: block;\n      margin: auto;\n      height: 100%;\n      width: 100%;\n      overflow: hidden; }\n      .slideshow-container .hide-slide {\n        visibility: hidden;\n        position: absolute;\n        top: -100vw;\n        left: -100vw;\n        opacity: 0; }\n      .slideshow-container .slides {\n        -ms-touch-action: pan-y;\n            touch-action: pan-y;\n        position: absolute;\n        top: 0;\n        height: 100%;\n        width: 100%;\n        visibility: visible;\n        opacity: 1;\n        display: block; }\n        .slideshow-container .slides.selected {\n          left: 0; }\n        .slideshow-container .slides.left-slide {\n          left: -100%; }\n        .slideshow-container .slides.right-slide {\n          left: 100%; }\n        .slideshow-container .slides.slide-in-left {\n          left: 0;\n          -webkit-animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideInLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-in-right {\n          left: 0;\n          -webkit-animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideInRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-out-left {\n          left: -100%;\n          -webkit-animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideOutLeft 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.slide-out-right {\n          left: 100%;\n          -webkit-animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1);\n                  animation: slideOutRight 0.5s cubic-bezier(0.42, 0, 0.58, 1); }\n        .slideshow-container .slides.link {\n          cursor: pointer; }\n        .slideshow-container .slides:not(.link) {\n          cursor: default; }\n      .slideshow-container .caption {\n        position: absolute;\n        bottom: 0;\n        padding: 10px;\n        width: 100%; }\n      .slideshow-container .arrow-container {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        -webkit-box-pack: center;\n            -ms-flex-pack: center;\n                justify-content: center;\n        position: absolute;\n        top: 0;\n        height: 100%;\n        width: auto;\n        cursor: pointer;\n        background-size: 100%;\n        background-image: -webkit-gradient(linear, left top, left bottom, from(transparent), to(transparent));\n        background-image: linear-gradient(transparent, transparent);\n        z-index: 100;\n        -webkit-user-select: none;\n           -moz-user-select: none;\n            -ms-user-select: none;\n                user-select: none; }\n        .slideshow-container .arrow-container:before {\n          display: block;\n          height: 100%;\n          position: absolute;\n          top: 0;\n          left: 0;\n          opacity: 0;\n          width: 100%;\n          z-index: -100;\n          -webkit-transition: opacity 0.45s;\n          transition: opacity 0.45s; }\n        .slideshow-container .arrow-container.prev {\n          left: 0; }\n          .slideshow-container .arrow-container.prev:before {\n            background-image: -webkit-gradient(linear, right top, left top, from(transparent), to(rgba(0, 0, 0, 0.75)));\n            background-image: linear-gradient(to left, transparent, rgba(0, 0, 0, 0.75));\n            content: ''; }\n        .slideshow-container .arrow-container.next {\n          right: 0; }\n          .slideshow-container .arrow-container.next:before {\n            background-image: -webkit-gradient(linear, left top, right top, from(transparent), to(rgba(0, 0, 0, 0.75)));\n            background-image: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.75));\n            content: ''; }\n        .slideshow-container .arrow-container .arrow {\n          display: block;\n          margin: auto;\n          width: 30px;\n          height: 30px;\n          background: transparent;\n          border-top: 2px solid #f2f2f2;\n          border-left: 2px solid #f2f2f2;\n          -webkit-transition: all .2s ease-in-out;\n          transition: all .2s ease-in-out;\n          -webkit-user-select: none;\n             -moz-user-select: none;\n              -ms-user-select: none;\n                  user-select: none; }\n          .slideshow-container .arrow-container .arrow:before {\n            display: block;\n            height: 200%;\n            width: 200%;\n            margin-left: -50%;\n            margin-top: -50%;\n            content: \"\";\n            -webkit-transform: rotate(45deg);\n                    transform: rotate(45deg); }\n          .slideshow-container .arrow-container .arrow.prev {\n            -webkit-transform: rotate(-45deg);\n                    transform: rotate(-45deg);\n            position: relative;\n            left: 20px;\n            margin-right: 10px; }\n          .slideshow-container .arrow-container .arrow.next {\n            -webkit-transform: rotate(135deg);\n                    transform: rotate(135deg);\n            position: relative;\n            right: 20px;\n            margin-left: 10px; }\n      .slideshow-container .slick-dots {\n        display: block;\n        bottom: 15px;\n        z-index: 1;\n        text-align: center;\n        position: absolute;\n        padding: 0;\n        left: 0;\n        right: 0;\n        margin: 0 auto; }\n        .slideshow-container .slick-dots li {\n          display: inline;\n          margin: 0;\n          padding: 0; }\n          .slideshow-container .slick-dots li button {\n            border: none;\n            background: none;\n            text-indent: -9999px;\n            font-size: 0;\n            width: 20px;\n            height: 20px;\n            outline: none;\n            position: relative;\n            z-index: 1;\n            cursor: pointer; }\n            .slideshow-container .slick-dots li button:before {\n              content: '';\n              width: 4px;\n              height: 4px;\n              background: var(--dot-color, #FFF);\n              border-radius: 4px;\n              display: block;\n              position: absolute;\n              top: 50%;\n              left: 50%;\n              -webkit-transform: translate(-50%, -50%);\n                      transform: translate(-50%, -50%);\n              opacity: .7;\n              -webkit-transition: all .5s ease-out;\n              transition: all .5s ease-out; }\n          .slideshow-container .slick-dots li.slick-active button:before {\n            -webkit-transform: translate(-50%, -50%) scale(1.4);\n                    transform: translate(-50%, -50%) scale(1.4);\n            opacity: 1; }\n\n    @media screen and (min-width: 768px) {\n      .slideshow-container .arrow-container:hover:before {\n        opacity: 1; }\n      .slideshow-container .arrow-container:hover .arrow {\n        border-width: 4px; }\n      .slideshow-container .arrow-container .arrow:hover {\n        border-width: 4px; } }\n\n    @-webkit-keyframes slideInRight {\n      0% {\n        left: -100%; }\n      100% {\n        left: 0; } }\n\n    @keyframes slideInRight {\n      0% {\n        left: -100%; }\n      100% {\n        left: 0; } }\n\n    @-webkit-keyframes slideInLeft {\n      0% {\n        left: 100%; }\n      100% {\n        left: 0; } }\n\n    @keyframes slideInLeft {\n      0% {\n        left: 100%; }\n      100% {\n        left: 0; } }\n\n    @-webkit-keyframes slideOutRight {\n      0% {\n        left: 0; }\n      100% {\n        left: -100%; } }\n\n    @keyframes slideOutRight {\n      0% {\n        left: 0; }\n      100% {\n        left: -100%; } }\n\n    @-webkit-keyframes slideOutLeft {\n      0% {\n        left: 0; }\n      100% {\n        left: 100%; } }\n\n    @keyframes slideOutLeft {\n      0% {\n        left: 0; }\n      100% {\n        left: 100%; } }\n\n    .loader {\n      position: absolute;\n      left: 50%;\n      margin-left: -20px;\n      top: 50%;\n      margin-top: -20px;\n      border: 5px solid #f3f3f3;\n      border-top: 5px solid #555;\n      border-radius: 50%;\n      width: 50px;\n      height: 50px;\n      -webkit-animation: spin 1s linear infinite;\n              animation: spin 1s linear infinite; }\n\n    @-webkit-keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n\n    @keyframes spin {\n      0% {\n        -webkit-transform: rotate(0deg);\n                transform: rotate(0deg); }\n      100% {\n        -webkit-transform: rotate(360deg);\n                transform: rotate(360deg); } }\n  `],\n  providers: [PointerService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SlideshowComponent implements OnInit, AfterViewInit, DoCheck, OnChanges, OnDestroy {\n  slideIndex: number = -1;\n  slides: ISlide[] = [];\n  hideLeftArrow: boolean = false;\n  hideRightArrow: boolean = false;\n  private _urlCache: (string | IImage)[];\n  private _autoplayIntervalId: any;\n  private _initial: boolean = true;\n  private _isHidden: boolean = false;\n  private _slideSub: Subscription;\n  private _clickSub: Subscription;\n\n  @Input() imageUrls: (string | IImage)[] = [];\n  @Input() height: string = '100%';\n  @Input() minHeight: string;\n  @Input() arrowSize: string;\n  @Input() showArrows: boolean = true;\n  @Input() disableSwiping: boolean = false;\n  @Input() autoPlay: boolean = false;\n  @Input() autoPlayInterval: number = 3333;\n  @Input() stopAutoPlayOnSlide: boolean = true;\n  @Input() autoPlayWaitForLazyLoad: boolean = true;\n  @Input() debug: boolean;\n  @Input() backgroundSize: string = 'cover';\n  @Input() backgroundPosition: string = 'center center';\n  @Input() backgroundRepeat: string = 'no-repeat';\n  @Input() showDots: boolean = false;\n  @Input() dotColor: string = '#FFF';\n  @Input() showCaptions: boolean = true;\n  @Input() captionColor: string = '#FFF';\n  @Input() captionBackground: string = 'rgba(0, 0, 0, .35)';\n  @Input() lazyLoad: boolean = false;\n  @Input() hideOnNoSlides: boolean = false;\n  @Input() fullscreen: boolean = false;\n  @Input() enableZoom: boolean = false;\n  @Input() enablePan: boolean = false;\n  @Input() noLoop: boolean = false;\n\n  @Output() onSlideLeft = new EventEmitter<number>();\n  @Output() onSlideRight = new EventEmitter<number>();\n  @Output() onSwipeLeft = new EventEmitter<number>();\n  @Output() onSwipeRight = new EventEmitter<number>();\n  @Output() onFullscreenExit = new EventEmitter<boolean>();\n  @Output() onIndexChanged = new EventEmitter<number>();\n  @Output() onImageLazyLoad = new EventEmitter<ISlide>();\n  @Output() onClick = new EventEmitter<{ slide: ISlide, index: number }>();\n\n  @ViewChild('container') container: ElementRef;\n  @ViewChild('prevArrow') prevArrow: ElementRef;\n  @ViewChild('nextArrow') nextArrow: ElementRef;\n\n  get safeStyleDotColor(): SafeStyle {\n    return this.sanitizer.bypassSecurityTrustStyle(`--dot-color: ${ this.dotColor }`);\n  }\n\n  constructor(\n    private _pointerService: PointerService,\n    private _renderer: Renderer2,\n    private _transferState: TransferState,\n    private _ngZone: NgZone,\n    private _cdRef: ChangeDetectorRef,\n    public sanitizer: DomSanitizer,\n    @Inject(PLATFORM_ID) private platform_id: any,\n    @Inject(DOCUMENT) private document: any\n  ) { }\n\n  ngOnInit() {\n    if (this.debug !== undefined) {\n      console.warn('[Deprecation Warning]: The debug input will be removed from ng-simple-slideshow in 1.3.0');\n    }\n    this._slideSub = this._pointerService.slideEvent.subscribe((indexDirection: number) => {\n      this.onSlide(indexDirection, true);\n    });\n    this._clickSub = this._pointerService.clickEvent.subscribe(() => {\n      this._onClick();\n    });\n    if (this.noLoop) {\n      this.hideLeftArrow = true;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this._pointerService.bind(this.container);\n  }\n\n  ngOnDestroy() {\n    try {\n      if (this._slideSub && !this._slideSub.closed) {\n        this._slideSub.unsubscribe();\n      }\n    }\n    catch (error) {\n      console.warn('Slide Subscription error caught in ng-simple-slideshow OnDestroy:', error);\n    }\n\n    try {\n      if (this._clickSub && !this._clickSub.closed) {\n        this._clickSub.unsubscribe();\n      }\n    }\n    catch (error) {\n      console.warn('Click Subscription error caught in ng-simple-slideshow OnDestroy:', error);\n    }\n\n    try {\n      this._pointerService.unbind(this.container);\n    }\n    catch (error) {\n      console.warn('Pointer Service unbind error caught in ng-simple-slideshow OnDestroy:', error);\n    }\n\n    try {\n      if (this._autoplayIntervalId) {\n        this._ngZone.runOutsideAngular(() => clearInterval(this._autoplayIntervalId));\n        this._autoplayIntervalId = null;\n      }\n    }\n    catch (error) {\n      console.warn('Autoplay cancel error caught in ng-simple-slideshow OnDestroy:', error);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['noLoop']) {\n      if (changes['noLoop'].currentValue) {\n        this.hideLeftArrow = this.slideIndex <= 0;\n        this.hideRightArrow = this.slideIndex === this.slides.length - 1;\n      }\n      else {\n        this.hideLeftArrow = false;\n        this.hideRightArrow = false;\n      }\n\n      this._cdRef.detectChanges();\n    }\n  }\n\n  ngDoCheck() {\n    // if this is the first being called, create a copy of the input\n    if (this.imageUrls && this.imageUrls.length > 0) {\n      if (this._initial === true) {\n        this._urlCache = Array.from(this.imageUrls);\n      }\n\n      if (this._isHidden === true) {\n        this._renderer.removeStyle(this.container.nativeElement, 'display');\n        this._isHidden = false;\n      }\n\n      this.setSlides();\n    }\n    else if (this.hideOnNoSlides === true) {\n      this._renderer.setStyle(this.container.nativeElement, 'display', 'none');\n      this._isHidden = true;\n    }\n\n    this.setStyles();\n    this.handleAutoPlay();\n    this._pointerService.disableSwiping = this.disableSwiping;\n    this._pointerService.enableZoom = this.enableZoom;\n    this._pointerService.enablePan = this.enablePan;\n  }\n\n  /**\n   * @param {number} indexDirection\n   * @param {boolean} isSwipe\n   * @description this is the function that should be called to make the slides change.\n   *              indexDirection to move back is -1, to move forward is 1, and to stay in place is 0.\n   *              0 is taken into account for failed swipes\n   */\n  onSlide(indexDirection: number, isSwipe?: boolean): void {\n    this.handleAutoPlay(this.stopAutoPlayOnSlide);\n    this.slide(indexDirection, isSwipe);\n  }\n\n  // /**\n  //  * @param {TouchEvent} e\n  //  * @param {string} when\n  //  * @description Use the swipe service to detect swipe events from phone and tablets\n  //  */\n  // onSwipe(e: TouchEvent, when: string): void {\n  //   if (this.disableSwiping === true) {\n  //     return;\n  //   }\n\n  //   const indexDirection = this._swipeService.swipe(e, when);\n  //   // handle a failed swipe\n  //   if (indexDirection === 0) {\n  //     return;\n  //   }\n  //   else {\n  //     this.onSlide(indexDirection, true);\n  //   }\n  // }\n\n  /**\n   * @description Redirect to current slide \"href\" if defined\n   */\n  private _onClick(): void {\n    const currentSlide = this.slides.length > 0 && this.slides[this.slideIndex];\n    this.onClick.emit({ slide: currentSlide, index: this.slideIndex });\n\n    if (currentSlide && currentSlide.image.clickAction) {\n      currentSlide.image.clickAction();\n    }\n    else if (currentSlide && currentSlide.image.href) {\n      this.document.location.href = currentSlide.image.href;\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @description set the index to the desired index - 1 and simulate a right slide\n   */\n  goToSlide(index: number) {\n    const beforeClickIndex = this.slideIndex;\n    this.slideIndex = index - 1;\n    this.setSlideIndex(1);\n\n    if (this.slides[this.slideIndex] && !this.slides[this.slideIndex].loaded) {\n      this.loadRemainingSlides();\n    }\n\n    this.handleAutoPlay(this.stopAutoPlayOnSlide);\n    this.slideRight(beforeClickIndex);\n    this.slides[beforeClickIndex].selected = false;\n    this.slides[this.slideIndex].selected = true;\n\n    this._cdRef.detectChanges();\n  }\n\n  /**\n   * @param {number} index\n   * @description set the index to the desired index - 1 and simulate a right slide\n   */\n  getSlideStyle(index: number) {\n    const slide = this.slides[index];\n\n    if (slide && slide.loaded) {\n      return {\n        \"background-image\": 'url(' + slide.image.url + ')',\n        \"background-size\": slide.image.backgroundSize || this.backgroundSize,\n        \"background-position\": slide.image.backgroundPosition || this.backgroundPosition,\n        \"background-repeat\": slide.image.backgroundRepeat || this.backgroundRepeat\n      };\n    }\n    else {\n      // doesn't compile correctly if returning an empty object, sooooo.....\n      return {\n        \"background-image\": undefined,\n        \"background-size\": undefined,\n        \"background-position\": undefined,\n        \"background-repeat\": undefined\n      };\n    }\n  }\n\n  exitFullScreen(e: Event) {\n    e.preventDefault();\n    this.fullscreen = false;\n    this.onFullscreenExit.emit(true);\n  }\n\n  /**\n   * @param {number} indexDirection\n   * @param {boolean} isSwipe\n   * @description Set the new slide index, then make the transition happen.\n   */\n  private slide(indexDirection: number, isSwipe?: boolean): void {\n    const oldIndex = this.slideIndex;\n\n    if (this.setSlideIndex(indexDirection)) {\n      if (this.slides[this.slideIndex] && !this.slides[this.slideIndex].loaded) {\n        this.loadRemainingSlides();\n      }\n\n      if (indexDirection === 1) {\n        this.slideRight(oldIndex, isSwipe);\n      }\n      else {\n        this.slideLeft(oldIndex, isSwipe);\n      }\n\n      this.slides[oldIndex].selected = false;\n      this.slides[this.slideIndex].selected = true;\n    }\n\n    this._cdRef.detectChanges();\n  }\n\n  /**\n   * @param {number} indexDirection\n   * @description This is just treating the url array like a circular list.\n   */\n  private setSlideIndex(indexDirection: number): boolean {\n    let willChange = true;\n    this.slideIndex += indexDirection;\n\n    if (this.noLoop) {\n      this.hideRightArrow = this.slideIndex === this.slides.length - 1;\n      this.hideLeftArrow = false;\n    }\n\n    if (this.slideIndex < 0) {\n      if (this.noLoop) {\n        this.slideIndex -= indexDirection;\n        willChange = false;\n        this.hideLeftArrow = true;\n      }\n      else {\n        this.slideIndex = this.slides.length - 1;\n      }\n    }\n    else if (this.slideIndex >= this.slides.length) {\n      if (this.noLoop) {\n        this.slideIndex -= indexDirection;\n        willChange = false;\n        this.hideRightArrow = true;\n      }\n      else {\n        this.slideIndex = 0;\n      }\n    }\n\n    if (willChange) {\n      this.onIndexChanged.emit(this.slideIndex);\n    }\n\n    return willChange;\n  }\n\n  /**\n   * @param {number} oldIndex\n   * @param {boolean} isSwipe\n   * @description This function handles the variables to move the CSS classes around accordingly.\n   *              In order to correctly handle animations, the new slide as well as the slides to\n   *              the left and right are assigned classes.\n   */\n  private slideLeft(oldIndex: number, isSwipe?: boolean): void {\n    if (isSwipe === true) {\n      this.onSwipeLeft.emit(this.slideIndex);\n    }\n    else {\n      this.onSlideLeft.emit(this.slideIndex);\n    }\n\n    this.slides[this.getLeftSideIndex(oldIndex)].leftSide = false;\n    this.slides[oldIndex].leftSide = true;\n    this.slides[oldIndex].action = 'slideOutLeft';\n    this.slides[this.slideIndex].rightSide = false;\n    this.slides[this.getRightSideIndex()].rightSide = true;\n    this.slides[this.slideIndex].action = 'slideInRight';\n  }\n\n  /**\n   * @param {number} oldIndex\n   * @param {boolean} isSwipe\n   * @description This function handles the variables to move the CSS classes around accordingly.\n   *              In order to correctly handle animations, the new slide as well as the slides to\n   *              the left and right are assigned classes.\n   */\n  private slideRight(oldIndex: number, isSwipe?: boolean): void {\n    if (isSwipe === true) {\n      this.onSwipeRight.emit(this.slideIndex);\n    }\n    else {\n      this.onSlideRight.emit(this.slideIndex);\n    }\n\n    this.slides[this.getRightSideIndex(oldIndex)].rightSide = false;\n    this.slides[oldIndex].rightSide = true;\n    this.slides[oldIndex].action = 'slideOutRight';\n    this.slides[this.slideIndex].leftSide = false;\n    this.slides[this.getLeftSideIndex()].leftSide = true;\n    this.slides[this.slideIndex].action = 'slideInLeft';\n  }\n\n  /**\n   * @description Check to make sure slide images have been set or haven't changed\n   */\n  private setSlides(): void {\n    if (this.imageUrls) {\n      if (this.checkCache() || this._initial === true) {\n        this._initial = false;\n        this._urlCache = Array.from(this.imageUrls);\n        this.slides = [];\n\n        if (this.lazyLoad === true) {\n          this.buildLazyLoadSlideArray();\n        }\n        else {\n          this.buildSlideArray();\n        }\n        this._cdRef.detectChanges();\n      }\n    }\n  }\n\n  /**\n   * @description create the slides without background urls, which will be added in\n   *              for the \"lazy load,\" then load only the first slide\n   */\n  private buildLazyLoadSlideArray(): void {\n    for (let image of this.imageUrls) {\n      this.slides.push({\n        image: (typeof image === 'string' ? { url: null } : { url: null, href: image.href || '' }),\n        action: '',\n        leftSide: false,\n        rightSide: false,\n        selected: false,\n        loaded: false\n      });\n    }\n    if (this.slideIndex === -1) {\n      this.slideIndex = 0;\n    }\n    this.slides[this.slideIndex].selected = true;\n    this.loadFirstSlide();\n    this.onIndexChanged.emit(this.slideIndex);\n  }\n\n  /**\n   * @description create the slides with background urls all at once\n   */\n  private buildSlideArray(): void {\n    for (let image of this.imageUrls) {\n      this.slides.push({\n        image: (typeof image === 'string' ? { url: image } : image),\n        action: '',\n        leftSide: false,\n        rightSide: false,\n        selected: false,\n        loaded: true\n      });\n    }\n    if (this.slideIndex === -1) {\n      this.slideIndex = 0;\n    }\n    this.slides[this.slideIndex].selected = true;\n    this.onIndexChanged.emit(this.slideIndex);\n  }\n\n  /**\n   * @description load the first slide image if lazy loading\n   *              this takes server side and browser side into account\n   */\n  private loadFirstSlide(): void {\n    const tmpIndex = this.slideIndex;\n    const tmpImage = this.imageUrls[tmpIndex];\n\n    // if server side, we don't need to worry about the rest of the slides\n    if (isPlatformServer(this.platform_id)) {\n      this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n      this.slides[tmpIndex].loaded = true;\n      this._transferState.set(FIRST_SLIDE_KEY, this.slides[tmpIndex]);\n    }\n    else {\n      const firstSlideFromTransferState = this._transferState.get(FIRST_SLIDE_KEY, null as any);\n      // if the first slide didn't finish loading on the server side, we need to load it\n      if (firstSlideFromTransferState === null) {\n        let loadImage = new Image();\n        loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n        loadImage.addEventListener('load', () => {\n          this.slides[tmpIndex].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n          this.slides[tmpIndex].loaded = true;\n          this.onImageLazyLoad.emit(this.slides[tmpIndex]);\n          this._cdRef.detectChanges();\n        });\n      }\n      else {\n        this.slides[tmpIndex] = firstSlideFromTransferState;\n        this._transferState.remove(FIRST_SLIDE_KEY);\n      }\n    }\n  }\n\n  /**\n   * @description if lazy loading in browser, start loading remaining slides\n   * @todo: figure out how to not show the spinner if images are loading fast enough\n   */\n  private loadRemainingSlides(): void {\n    for (let i = 0; i < this.slides.length; i++) {\n      if (!this.slides[i].loaded) {\n        new Promise((resolve) => {\n          const tmpImage = this.imageUrls[i];\n          let loadImage = new Image();\n          loadImage.addEventListener('load', () => {\n            this.slides[i].image = (typeof tmpImage === 'string' ? { url: tmpImage } : tmpImage);\n            this.slides[i].loaded = true;\n            this._cdRef.detectChanges();\n            this.onImageLazyLoad.emit(this.slides[i]);\n            resolve();\n          });\n          loadImage.src = (typeof tmpImage === 'string' ? tmpImage : tmpImage.url);\n        });\n      }\n    }\n  }\n\n  /**\n   * @param {boolean} stopAutoPlay\n   * @description Start or stop autoPlay, don't do it at all server side\n   */\n  private handleAutoPlay(stopAutoPlay?: boolean): void {\n    if (isPlatformServer(this.platform_id)) {\n      return;\n    }\n\n    if (stopAutoPlay === true || this.autoPlay === false) {\n      if (this._autoplayIntervalId) {\n        this._ngZone.runOutsideAngular(() => clearInterval(this._autoplayIntervalId));\n        this._autoplayIntervalId = null;\n      }\n    }\n    else if (!this._autoplayIntervalId) {\n      this._ngZone.runOutsideAngular(() => {\n        this._autoplayIntervalId = setInterval(() => {\n          if (!this.autoPlayWaitForLazyLoad || (this.autoPlayWaitForLazyLoad && this.slides[this.slideIndex] && this.slides[this.slideIndex].loaded)) {\n            this._ngZone.run(() => this.slide(1));\n          }\n        }, this.autoPlayInterval);\n      });\n    }\n  }\n\n  /**\n   * @description Keep the styles up to date with the input\n   */\n  private setStyles(): void {\n    if (this.fullscreen) {\n      this._renderer.setStyle(this.container.nativeElement, 'height', '100%');\n      // Would be nice to make it configurable\n      this._renderer.setStyle(this.container.nativeElement, 'background-color', 'white');\n    }\n    else {\n      // Would be nice to make it configurable\n      this._renderer.removeStyle(this.container.nativeElement, 'background-color');\n      if (this.height) {\n        this._renderer.setStyle(this.container.nativeElement, 'height', this.height);\n      }\n\n      if (this.minHeight) {\n        this._renderer.setStyle(this.container.nativeElement, 'min-height', this.minHeight);\n      }\n    }\n    if (this.arrowSize) {\n      this._renderer.setStyle(this.prevArrow.nativeElement, 'height', this.arrowSize);\n      this._renderer.setStyle(this.prevArrow.nativeElement, 'width', this.arrowSize);\n      this._renderer.setStyle(this.nextArrow.nativeElement, 'height', this.arrowSize);\n      this._renderer.setStyle(this.nextArrow.nativeElement, 'width', this.arrowSize);\n    }\n  }\n\n  /**\n   * @description compare image array to the cache, returns false if no changes\n   */\n  private checkCache(): boolean {\n    return !(this._urlCache.length === this.imageUrls.length && this._urlCache.every((cacheElement, i) => cacheElement === this.imageUrls[i]));\n  }\n\n  /**\n   * @param {number} i\n   * @returns {number}\n   * @description get the index for the slide to the left of the new slide\n   */\n  private getLeftSideIndex(i?: number): number {\n    if (i === undefined) {\n      i = this.slideIndex;\n    }\n\n    if (--i < 0) {\n      i = this.slides.length - 1;\n    }\n\n    return i;\n  }\n\n  /**\n   * @param {number} i\n   * @returns {number}\n   * @description get the index for the slide to the right of the new slide\n   */\n  private getRightSideIndex(i?: number): number {\n    if (i === undefined) {\n      i = this.slideIndex;\n    }\n\n    if (++i >= this.slides.length) {\n      i = 0;\n    }\n\n    return i;\n  }\n\n  /**\n   * @param {number} index\n   * @param {ISlide} slide\n   * @returns {any}\n   * @description a trackBy function for the ngFor loops\n   */\n  trackByFn(index: number, slide: ISlide): any {\n    return slide.image;\n  }\n\n  /**\n   * @description don't let click events fire, handle in pointer service instead\n   */\n  handleClick(event) {\n    event.preventDefault();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SlideshowComponent } from './slideshow.component';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport { PointerService } from './pointer.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserTransferStateModule\n  ],\n  declarations: [\n    SlideshowComponent\n  ],\n  exports: [\n    SlideshowComponent\n  ]\n})\nexport class SlideshowModule { }\n"],"names":["State","this","aw","ah","w","h","Object","defineProperty","prototype","get","Math","sqrt","ar","PointerService","platform_id","_this","_disableSwiping","_enableZoom","_enablePan","_startEVCache","_evCache","Array","_previousDiagonal","_originalState","_slideEvent","EventEmitter","_clickEvent","pointerUp","event","_pointerUp","pointerDown","_pointerDown","pointerMove","_pointerMove","set","state","bind","el","isPlatformBrowser","nativeElement","addEventListener","unbind","removeEventListener","e","push","length","_loadOriginalState","_convertBGSizeToPixels","_convertBGPosToPixels","valid","target","style","backgroundImage","imgUrlArr","match","img","Image","src","offsetWidth","offsetHeight","width","height","imgElement","bgSize","backgroundSize","indexOf","sizeTuple","split","widthBound","substring","bgSizePercentage","Number","_currentBGSize","bgPosX","backgroundPositionX","_convertLiteralPosToPercentage","bgPosY","backgroundPositionY","i","pointerId","splice","_checkClickOrSwipe","_targetIsASlide","duration","timeStamp","dirX","pageX","dirY","pageY","abs","emit","_cannotPanMoreTest","classList","contains","xPos","_currentBGPosX","round","preventDefault","_1pointMoveAction","_2pointMoveAction","dx","dy","_transformBGPosition","x","y","currentDiagonal","deltaX","_transformBGSize","previousPosX","previousPosY","_currentBGPosY","newPosX","_newBGPosXConstraint","newPosY","_newBGPosYConstraint","_setBGPos","element","literal","currentSize","newSize","_newBGSizeConstraint","_setBGSize","size","touchAction","newX","newY","decorators","type","Injectable","ctorParameters","undefined","Inject","args","PLATFORM_ID","FIRST_SLIDE_KEY","makeStateKey","SlideshowComponent","_pointerService","_renderer","_transferState","_ngZone","_cdRef","sanitizer","document","slideIndex","slides","hideLeftArrow","hideRightArrow","_initial","_isHidden","imageUrls","showArrows","disableSwiping","autoPlay","autoPlayInterval","stopAutoPlayOnSlide","autoPlayWaitForLazyLoad","backgroundPosition","backgroundRepeat","showDots","dotColor","showCaptions","captionColor","captionBackground","lazyLoad","hideOnNoSlides","fullscreen","enableZoom","enablePan","noLoop","onSlideLeft","onSlideRight","onSwipeLeft","onSwipeRight","onFullscreenExit","onIndexChanged","onImageLazyLoad","onClick","bypassSecurityTrustStyle","ngOnInit","debug","console","warn","_slideSub","slideEvent","subscribe","indexDirection","onSlide","_clickSub","clickEvent","_onClick","ngAfterViewInit","container","ngOnDestroy","closed","unsubscribe","error","_autoplayIntervalId","runOutsideAngular","clearInterval","ngOnChanges","changes","currentValue","detectChanges","ngDoCheck","_urlCache","from","removeStyle","setSlides","setStyle","setStyles","handleAutoPlay","isSwipe","slide","currentSlide","index","image","clickAction","href","location","goToSlide","beforeClickIndex","setSlideIndex","loaded","loadRemainingSlides","slideRight","selected","getSlideStyle","background-image","url","background-size","background-position","background-repeat","exitFullScreen","oldIndex","slideLeft","willChange","getLeftSideIndex","leftSide","action","rightSide","getRightSideIndex","checkCache","buildLazyLoadSlideArray","buildSlideArray","_i","_a","loadFirstSlide","tmpIndex","tmpImage","isPlatformServer","firstSlideFromTransferState","loadImage","remove","_loop_1","this_1","Promise","resolve","stopAutoPlay","setInterval","run","minHeight","arrowSize","prevArrow","nextArrow","every","cacheElement","trackByFn","handleClick","Component","selector","template","styles","providers","changeDetection","ChangeDetectionStrategy","OnPush","Renderer2","TransferState","NgZone","ChangeDetectorRef","DomSanitizer","DOCUMENT","propDecorators","Input","Output","ViewChild","SlideshowModule","NgModule","imports","CommonModule","BrowserTransferStateModule","declarations","exports"],"mappings":"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"}
