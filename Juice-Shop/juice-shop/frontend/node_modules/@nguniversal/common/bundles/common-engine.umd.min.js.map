{"version":3,"sources":["modules/common/common-engine.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","nguniversal","common","engine","fs","tslib","ng","compiler","core","platformServer","this","FileLoader","prototype","get","url","Promise","resolve","reject","readFile","err","data","toString","CommonEngine","moduleOrFactory","providers","factoryCacheMap","Map","templateCache","getCompiler","platformDynamicServer","injector","CompilerFactory","createCompiler","provide","ResourceLoader","useClass","deps","render","opts","__awaiter","_a","extraProviders","__generator","_b","label","document","getDocument","documentFilePath","sent","__spread","INITIAL_CONFIG","useValue","getFactory","bootstrap","renderModuleFactory","moduleFactory","NgModuleFactory","compileModuleAsync","set","filePath","doc","readFileSync","ɵCommonEngine","ɵFileLoader","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('fs'), require('tslib'), require('@angular/compiler'), require('@angular/core'), require('@angular/platform-server')) :\n    typeof define === 'function' && define.amd ? define('@nguniversal/common/engine', ['exports', 'fs', 'tslib', '@angular/compiler', '@angular/core', '@angular/platform-server'], factory) :\n    (global = global || self, factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.common = global.nguniversal.common || {}, global.nguniversal.common.engine = {}), global.fs, global.tslib, global.ng.compiler, global.ng.core, global.ng.platformServer));\n}(this, (function (exports, fs, tslib, compiler, core, platformServer) { 'use strict';\n\n    /** ResourceLoader implementation for loading files */\n    var FileLoader = /** @class */ (function () {\n        function FileLoader() {\n        }\n        FileLoader.prototype.get = function (url) {\n            return new Promise(function (resolve, reject) {\n                fs.readFile(url, function (err, data) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    resolve(data.toString());\n                });\n            });\n        };\n        return FileLoader;\n    }());\n\n    /**\n     * A common rendering engine utility. This abstracts the logic\n     * for handling the platformServer compiler, the module cache, and\n     * the document loader\n     */\n    var CommonEngine = /** @class */ (function () {\n        function CommonEngine(moduleOrFactory, providers) {\n            if (providers === void 0) { providers = []; }\n            this.moduleOrFactory = moduleOrFactory;\n            this.providers = providers;\n            this.factoryCacheMap = new Map();\n            this.templateCache = {};\n        }\n        /** Return an instance of the platformServer compiler */\n        CommonEngine.prototype.getCompiler = function () {\n            var compilerFactory = platformServer.platformDynamicServer().injector.get(core.CompilerFactory);\n            return compilerFactory.createCompiler([\n                { providers: [{ provide: compiler.ResourceLoader, useClass: FileLoader, deps: [] }] }\n            ]);\n        };\n        /**\n         * Render an HTML document for a specific URL with specified\n         * render options\n         */\n        CommonEngine.prototype.render = function (opts) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var doc, _a, extraProviders, moduleOrFactory, factory;\n                return tslib.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = opts.document;\n                            if (_a) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.getDocument(opts.documentFilePath)];\n                        case 1:\n                            _a = (_b.sent());\n                            _b.label = 2;\n                        case 2:\n                            doc = _a;\n                            extraProviders = tslib.__spread((opts.providers || []), (this.providers || []), [\n                                {\n                                    provide: platformServer.INITIAL_CONFIG,\n                                    useValue: {\n                                        document: doc,\n                                        url: opts.url\n                                    }\n                                }\n                            ]);\n                            moduleOrFactory = this.moduleOrFactory || opts.bootstrap;\n                            return [4 /*yield*/, this.getFactory(moduleOrFactory)];\n                        case 3:\n                            factory = _b.sent();\n                            return [2 /*return*/, platformServer.renderModuleFactory(factory, { extraProviders: extraProviders })];\n                    }\n                });\n            });\n        };\n        /** Return the factory for a given engine instance */\n        CommonEngine.prototype.getFactory = function (moduleOrFactory) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var moduleFactory, factory;\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!(moduleOrFactory instanceof core.NgModuleFactory)) return [3 /*break*/, 1];\n                            return [2 /*return*/, moduleOrFactory];\n                        case 1:\n                            moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n                            // If module factory is cached\n                            if (moduleFactory) {\n                                return [2 /*return*/, moduleFactory];\n                            }\n                            return [4 /*yield*/, this.getCompiler().compileModuleAsync(moduleOrFactory)];\n                        case 2:\n                            factory = _a.sent();\n                            this.factoryCacheMap.set(moduleOrFactory, factory);\n                            return [2 /*return*/, factory];\n                    }\n                });\n            });\n        };\n        /** Retrieve the document from the cache or the filesystem */\n        CommonEngine.prototype.getDocument = function (filePath) {\n            var doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n                fs.readFileSync(filePath).toString();\n            // As  promise so we can change the API later without breaking\n            return Promise.resolve(doc);\n        };\n        return CommonEngine;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵCommonEngine = CommonEngine;\n    exports.ɵFileLoader = FileLoader;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=common-engine.umd.js.map\n"]}