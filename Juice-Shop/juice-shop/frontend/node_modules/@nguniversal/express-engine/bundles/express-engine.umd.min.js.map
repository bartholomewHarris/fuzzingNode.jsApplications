{"version":3,"sources":["modules/express-engine/express-engine.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","nguniversal","expressEngine","tslib","fs","ng","compiler","core","platformServer","tokens","this","FileLoader","prototype","get","url","Promise","resolve","reject","readFile","err","data","toString","CommonEngine","moduleOrFactory","providers","factoryCacheMap","Map","templateCache","getCompiler","platformDynamicServer","injector","CompilerFactory","createCompiler","provide","ResourceLoader","useClass","deps","render","opts","__awaiter","_a","extraProviders","__generator","_b","label","document","getDocument","documentFilePath","sent","__spread","INITIAL_CONFIG","useValue","getFactory","bootstrap","renderModuleFactory","moduleFactory","NgModuleFactory","compileModuleAsync","set","filePath","doc","readFileSync","ngExpressEngine","setupOptions","engine","options","callback","renderOptions","__assign","Error","req","res","protocol","originalUrl","concat","getReqResProviders","REQUEST","push","RESPONSE","then","html","catch","Object","defineProperty","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,SAAUA,QAAQ,MAAOA,QAAQ,qBAAsBA,QAAQ,iBAAkBA,QAAQ,4BAA6BA,QAAQ,uCACpM,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,8BAA+B,CAAC,UAAW,QAAS,KAAM,oBAAqB,gBAAiB,2BAA4B,sCAAuCJ,GAC7LA,IAAzBD,EAASA,GAAUO,MAAsBC,YAAcR,EAAOQ,aAAe,GAAIR,EAAOQ,YAAYC,cAAgB,IAAKT,EAAOU,MAAOV,EAAOW,GAAIX,EAAOY,GAAGC,SAAUb,EAAOY,GAAGE,KAAMd,EAAOY,GAAGG,eAAgBf,EAAOQ,YAAYC,cAAcO,QAHtP,CAIEC,MAAM,SAAWf,EAASQ,EAAOC,EAAIE,EAAUC,EAAMC,EAAgBC,GAAU,aAG7E,IAAIE,EAA4B,WAC5B,SAASA,KAYT,OAVAA,EAAWC,UAAUC,IAAM,SAAUC,GACjC,OAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClCb,EAAGc,SAASJ,GAAK,SAAUK,EAAKC,GAC5B,GAAID,EACA,OAAOF,EAAOE,GAElBH,EAAQI,EAAKC,mBAIlBV,EAboB,GAqB3BW,EAA8B,WAC9B,SAASA,EAAaC,EAAiBC,QACjB,IAAdA,IAAwBA,EAAY,IACxCd,KAAKa,gBAAkBA,EACvBb,KAAKc,UAAYA,EACjBd,KAAKe,gBAAkB,IAAIC,IAC3BhB,KAAKiB,cAAgB,GA4EzB,OAzEAL,EAAaV,UAAUgB,YAAc,WAEjC,OADsBpB,EAAeqB,wBAAwBC,SAASjB,IAAIN,EAAKwB,iBACxDC,eAAe,CAClC,CAAER,UAAW,CAAC,CAAES,QAAS3B,EAAS4B,eAAgBC,SAAUxB,EAAYyB,KAAM,SAOtFd,EAAaV,UAAUyB,OAAS,SAAUC,GACtC,OAAOnC,EAAMoC,UAAU7B,UAAM,OAAQ,GAAQ,WACzC,IAAS8B,EAAIC,EAAiC/C,EAC9C,OAAOS,EAAMuC,YAAYhC,MAAM,SAAUiC,GACrC,OAAQA,EAAGC,OACP,KAAK,EAED,OADAJ,EAAKF,EAAKO,UACK,CAAC,EAAa,GACtB,CAAC,EAAanC,KAAKoC,YAAYR,EAAKS,mBAC/C,KAAK,EACDP,EAAMG,EAAGK,OACTL,EAAGC,MAAQ,EACf,KAAK,EAYD,OAVAH,EAAiBtC,EAAM8C,SAAUX,EAAKd,WAAa,GAAMd,KAAKc,WAAa,GAAK,CAC5E,CACIS,QAASzB,EAAe0C,eACxBC,SAAU,CACNN,SALNL,EAMM1B,IAAKwB,EAAKxB,QAKf,CAAC,EAAaJ,KAAK0C,WADR1C,KAAKa,iBAAmBe,EAAKe,YAEnD,KAAK,EAED,OADA3D,EAAUiD,EAAGK,OACN,CAAC,EAAcxC,EAAe8C,oBAAoB5D,EAAS,CAAE+C,eAAgBA,aAMxGnB,EAAaV,UAAUwC,WAAa,SAAU7B,GAC1C,OAAOpB,EAAMoC,UAAU7B,UAAM,OAAQ,GAAQ,WACzC,IAAI6C,EAAe7D,EACnB,OAAOS,EAAMuC,YAAYhC,MAAM,SAAU8B,GACrC,OAAQA,EAAGI,OACP,KAAK,EACD,OAAMrB,aAA2BhB,EAAKiD,gBAC/B,CAAC,EAAcjC,GADyC,CAAC,EAAa,GAEjF,KAAK,EAGD,OAFAgC,EAAgB7C,KAAKe,gBAAgBZ,IAAIU,IAG9B,CAAC,EAAcgC,GAEnB,CAAC,EAAa7C,KAAKkB,cAAc6B,mBAAmBlC,IAC/D,KAAK,EAGD,OAFA7B,EAAU8C,EAAGQ,OACbtC,KAAKe,gBAAgBiC,IAAInC,EAAiB7B,GACnC,CAAC,EAAcA,WAM1C4B,EAAaV,UAAUkC,YAAc,SAAUa,GAC3C,IAAIC,EAAMlD,KAAKiB,cAAcgC,GAAYjD,KAAKiB,cAAcgC,IACxDvD,EAAGyD,aAAaF,GAAUtC,WAE9B,OAAON,QAAQC,QAAQ4C,IAEpBtC,EAlFsB,GAwH7BK,EAAgB;;;;;;;;;;;;;;;AAyEpBhC,EAAQmE,gBArER,SAASA,EAAgBC,GACrB,IAAIC,EAAS,IAAI1C,EAAayC,EAAaV,UAAWU,EAAavC,WACnE,OAAO,SAAUmC,EAAUM,EAASC,GAChC,IACI,IAAIC,EAAgBhE,EAAMiE,SAAS,GAAIH,GACvC,IAAKF,EAAaV,YAAcc,EAAcd,UAC1C,MAAM,IAAIgB,MAAM,qEAEpB,IAAIC,EAAMH,EAAcG,IACpBC,EAAMJ,EAAcI,KAAOD,EAAIC,IACnCJ,EAAcrD,IACVqD,EAAcrD,KAAOwD,EAAIE,SAAW,OAASF,EAAIzD,IAAI,SAAW,IAAMyD,EAAIG,YAC9EN,EAActB,SAAWsB,EAActB,UAiCnD,SAASC,EAAYa,GACjB,OAAOhC,EAAcgC,GAAYhC,EAAcgC,IAAavD,EAAGyD,aAAaF,GAAUtC,WAlC3ByB,CAAYa,GAC/DQ,EAAc3C,UAAY2C,EAAc3C,WAAa,GACrD2C,EAAc3C,UAAY2C,EAAc3C,UAAUkD,OAa9D,SAASC,EAAmBL,EAAKC,GAC7B,IAAI/C,EAAY,CACZ,CACIS,QAASxB,EAAOmE,QAChBzB,SAAUmB,IASlB,OANIC,GACA/C,EAAUqD,KAAK,CACX5C,QAASxB,EAAOqE,SAChB3B,SAAUoB,IAGX/C,EA1B0DmD,CAAmBL,EAAKC,IACjFP,EAAO3B,OAAO8B,GACTY,MAAK,SAAUC,GAAQ,OAAOd,EAAS,KAAMc,MAC7CC,MAAMf,GAEf,MAAO/C,GACH+C,EAAS/C,MAmDrB+D,OAAOC,eAAexF,EAAS,aAAc,CAAEyF,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('fs'), require('@angular/compiler'), require('@angular/core'), require('@angular/platform-server'), require('@nguniversal/express-engine/tokens')) :\n    typeof define === 'function' && define.amd ? define('@nguniversal/express-engine', ['exports', 'tslib', 'fs', '@angular/compiler', '@angular/core', '@angular/platform-server', '@nguniversal/express-engine/tokens'], factory) :\n    (global = global || self, factory((global.nguniversal = global.nguniversal || {}, global.nguniversal.expressEngine = {}), global.tslib, global.fs, global.ng.compiler, global.ng.core, global.ng.platformServer, global.nguniversal.expressEngine.tokens));\n}(this, (function (exports, tslib, fs, compiler, core, platformServer, tokens) { 'use strict';\n\n    /** ResourceLoader implementation for loading files */\n    var FileLoader = /** @class */ (function () {\n        function FileLoader() {\n        }\n        FileLoader.prototype.get = function (url) {\n            return new Promise(function (resolve, reject) {\n                fs.readFile(url, function (err, data) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    resolve(data.toString());\n                });\n            });\n        };\n        return FileLoader;\n    }());\n\n    /**\n     * A common rendering engine utility. This abstracts the logic\n     * for handling the platformServer compiler, the module cache, and\n     * the document loader\n     */\n    var CommonEngine = /** @class */ (function () {\n        function CommonEngine(moduleOrFactory, providers) {\n            if (providers === void 0) { providers = []; }\n            this.moduleOrFactory = moduleOrFactory;\n            this.providers = providers;\n            this.factoryCacheMap = new Map();\n            this.templateCache = {};\n        }\n        /** Return an instance of the platformServer compiler */\n        CommonEngine.prototype.getCompiler = function () {\n            var compilerFactory = platformServer.platformDynamicServer().injector.get(core.CompilerFactory);\n            return compilerFactory.createCompiler([\n                { providers: [{ provide: compiler.ResourceLoader, useClass: FileLoader, deps: [] }] }\n            ]);\n        };\n        /**\n         * Render an HTML document for a specific URL with specified\n         * render options\n         */\n        CommonEngine.prototype.render = function (opts) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var doc, _a, extraProviders, moduleOrFactory, factory;\n                return tslib.__generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            _a = opts.document;\n                            if (_a) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.getDocument(opts.documentFilePath)];\n                        case 1:\n                            _a = (_b.sent());\n                            _b.label = 2;\n                        case 2:\n                            doc = _a;\n                            extraProviders = tslib.__spread((opts.providers || []), (this.providers || []), [\n                                {\n                                    provide: platformServer.INITIAL_CONFIG,\n                                    useValue: {\n                                        document: doc,\n                                        url: opts.url\n                                    }\n                                }\n                            ]);\n                            moduleOrFactory = this.moduleOrFactory || opts.bootstrap;\n                            return [4 /*yield*/, this.getFactory(moduleOrFactory)];\n                        case 3:\n                            factory = _b.sent();\n                            return [2 /*return*/, platformServer.renderModuleFactory(factory, { extraProviders: extraProviders })];\n                    }\n                });\n            });\n        };\n        /** Return the factory for a given engine instance */\n        CommonEngine.prototype.getFactory = function (moduleOrFactory) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var moduleFactory, factory;\n                return tslib.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            if (!(moduleOrFactory instanceof core.NgModuleFactory)) return [3 /*break*/, 1];\n                            return [2 /*return*/, moduleOrFactory];\n                        case 1:\n                            moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n                            // If module factory is cached\n                            if (moduleFactory) {\n                                return [2 /*return*/, moduleFactory];\n                            }\n                            return [4 /*yield*/, this.getCompiler().compileModuleAsync(moduleOrFactory)];\n                        case 2:\n                            factory = _a.sent();\n                            this.factoryCacheMap.set(moduleOrFactory, factory);\n                            return [2 /*return*/, factory];\n                    }\n                });\n            });\n        };\n        /** Retrieve the document from the cache or the filesystem */\n        CommonEngine.prototype.getDocument = function (filePath) {\n            var doc = this.templateCache[filePath] = this.templateCache[filePath] ||\n                fs.readFileSync(filePath).toString();\n            // As  promise so we can change the API later without breaking\n            return Promise.resolve(doc);\n        };\n        return CommonEngine;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * This holds a cached version of each index used.\n     */\n    var templateCache = {};\n    /**\n     * This is an express engine for handling Angular Applications\n     */\n    function ngExpressEngine(setupOptions) {\n        var engine = new CommonEngine(setupOptions.bootstrap, setupOptions.providers);\n        return function (filePath, options, callback) {\n            try {\n                var renderOptions = tslib.__assign({}, options);\n                if (!setupOptions.bootstrap && !renderOptions.bootstrap) {\n                    throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n                }\n                var req = renderOptions.req;\n                var res = renderOptions.res || req.res;\n                renderOptions.url =\n                    renderOptions.url || req.protocol + \"://\" + (req.get('host') || '') + req.originalUrl;\n                renderOptions.document = renderOptions.document || getDocument(filePath);\n                renderOptions.providers = renderOptions.providers || [];\n                renderOptions.providers = renderOptions.providers.concat(getReqResProviders(req, res));\n                engine.render(renderOptions)\n                    .then(function (html) { return callback(null, html); })\n                    .catch(callback);\n            }\n            catch (err) {\n                callback(err);\n            }\n        };\n    }\n    /**\n     * Get providers of the request and response\n     */\n    function getReqResProviders(req, res) {\n        var providers = [\n            {\n                provide: tokens.REQUEST,\n                useValue: req\n            }\n        ];\n        if (res) {\n            providers.push({\n                provide: tokens.RESPONSE,\n                useValue: res\n            });\n        }\n        return providers;\n    }\n    /**\n     * Get the document at the file path\n     */\n    function getDocument(filePath) {\n        return templateCache[filePath] = templateCache[filePath] || fs.readFileSync(filePath).toString();\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ngExpressEngine = ngExpressEngine;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=express-engine.umd.js.map\n"]}